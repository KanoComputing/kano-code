{
    "steps": [
        {
            "banner": {
                "text": "Please plug in a Tilt sensor for this challenge",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            },
            "validation": {
                "add-part": {
                    "type": "gyro-accelerometer",
                    "id": "tilt_0"
                }
            }
        },
        {
            "banner": {
                "text": "We have our tilting brush but it slips off our canvas, let's crush this bug with constrain",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "We're going to check our brush position every frame so open the Variables tray"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "variables_set"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "variables_set",
                        "id": "block_13"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "rawId": "SG5dVBlad4QI`jt;2a[x"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "rawId": "SG5dVBlad4QI`jt;2a[x"
                        },
                        "target": "block_13"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "rawId": "SG5dVBlad4QI`jt;2a[x"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "First we'll fix the horizontal variable, change to <kano-value-preview><span>brushX</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_13"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_13"
                        },
                        "value": "brushX"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "We need a special block that will make sure our variable stays between two numbers no matter how much we try to add to it, open the Math tray"
            },
            "beacon": {
                "target": {
                    "category": "math"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "math"
                }
            }
        },
        {
            "banner": {
                "text": "With this block our variable can never be higher or lower than the numbers we set"
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_constrain"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_constrain",
                        "id": "block_14"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_13",
                        "rawId": "_ah~iFl{g_W$`i2T(LGR"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_13",
                            "rawId": "_ah~iFl{g_W$`i2T(LGR",
                            "inputName": "VALUE"
                        },
                        "target": "block_14"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_13",
                        "rawId": "_ah~iFl{g_W$`i2T(LGR"
                    }
                },
                "target": "VALUE"
            }
        },
        {
            "banner": {
                "text": "Let's grab our variable again"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "variables_get"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "variables_get",
                        "id": "block_15"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_14",
                        "rawId": "7$u]=%+{Q}9-|]u^|g`_"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_14",
                            "rawId": "7$u]=%+{Q}9-|]u^|g`_",
                            "inputName": "VALUE"
                        },
                        "target": "block_15"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_14",
                        "rawId": "7$u]=%+{Q}9-|]u^|g`_"
                    }
                },
                "target": "VALUE"
            }
        },
        {
            "banner": {
                "text": "Change from <kano-value-preview><span>item</span></kano-value-preview> to <kano-value-preview><span>brushX</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_15"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_15"
                        },
                        "value": "brushX"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Now to choose the numbers to constrain our variable within, open the Variables tray"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_number"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_number",
                        "id": "block_16"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_14",
                        "rawId": "7$u]=%+{Q}9-|]u^|g`_"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_14",
                            "rawId": "7$u]=%+{Q}9-|]u^|g`_",
                            "inputName": "LOW"
                        },
                        "target": "block_16"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_14",
                        "rawId": "7$u]=%+{Q}9-|]u^|g`_"
                    }
                },
                "target": "LOW"
            }
        },
        {
            "banner": {
                "text": "Change from <kano-value-preview><span>0</span></kano-value-preview> to <kano-value-preview><span>1</span></kano-value-preview>, because 1 is the left-most pixel on the lightboard"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_16"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_16"
                        },
                        "value": "1"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Now for the high number, open the Variables tray"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_number"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_number",
                        "id": "block_17"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_14",
                        "rawId": "7$u]=%+{Q}9-|]u^|g`_"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_14",
                            "rawId": "7$u]=%+{Q}9-|]u^|g`_",
                            "inputName": "HIGH"
                        },
                        "target": "block_17"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_14",
                        "rawId": "7$u]=%+{Q}9-|]u^|g`_"
                    }
                },
                "target": "HIGH"
            }
        },
        {
            "banner": {
                "text": "Change from <kano-value-preview><span>0</span></kano-value-preview> to <kano-value-preview><span>16</span></kano-value-preview> because the lightboard is 16 pixels wide"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_17"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_17"
                        },
                        "value": "16"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Try tilting your lightboard left and right, notice it now stays on the lightboard. Now we need to do the same for the vertical",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "Let's get our vertical variable"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "variables_set"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "variables_set",
                        "id": "block_18"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_13",
                        "rawId": "_ah~iFl{g_W$`i2T(LGR"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_13",
                            "rawId": "_ah~iFl{g_W$`i2T(LGR"
                        },
                        "target": "block_18"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_13",
                        "rawId": "_ah~iFl{g_W$`i2T(LGR"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Change from <kano-value-preview><span>item</span></kano-value-preview> to our vertical position <kano-value-preview><span>brushY</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_18"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_18"
                        },
                        "value": "brushY"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Let's constrain the vertical, open the Math tray"
            },
            "beacon": {
                "target": {
                    "category": "math"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "math"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_constrain"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_constrain",
                        "id": "block_19"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_18",
                        "rawId": "3brU$5Yi-x1||gd9)y(i"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_18",
                            "rawId": "3brU$5Yi-x1||gd9)y(i",
                            "inputName": "VALUE"
                        },
                        "target": "block_19"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_18",
                        "rawId": "3brU$5Yi-x1||gd9)y(i"
                    }
                },
                "target": "VALUE"
            }
        },
        {
            "banner": {
                "text": "We'll do the same as before, open the Variables tray"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "variables_get"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "variables_get",
                        "id": "block_20"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_19",
                        "rawId": "t,65ucaurIWrJ]5{!p!9"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_19",
                            "rawId": "t,65ucaurIWrJ]5{!p!9",
                            "inputName": "VALUE"
                        },
                        "target": "block_20"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_19",
                        "rawId": "t,65ucaurIWrJ]5{!p!9"
                    }
                },
                "target": "VALUE"
            }
        },
        {
            "banner": {
                "text": "Change from <kano-value-preview><span>item</span></kano-value-preview> to <kano-value-preview><span>brushY</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_20"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_20"
                        },
                        "value": "brushY"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Now for the numbers, open the Variables tray"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_number"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_number",
                        "id": "block_21"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_19",
                        "rawId": "t,65ucaurIWrJ]5{!p!9"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_19",
                            "rawId": "t,65ucaurIWrJ]5{!p!9",
                            "inputName": "LOW"
                        },
                        "target": "block_21"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_19",
                        "rawId": "t,65ucaurIWrJ]5{!p!9"
                    }
                },
                "target": "LOW"
            }
        },
        {
            "banner": {
                "text": "Change from <kano-value-preview><span>0</span></kano-value-preview> to <kano-value-preview><span>1</span></kano-value-preview> because 1 is the top of the lightboard"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_21"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_21"
                        },
                        "value": "1"
                    }
                }
            }
        },
        {
            "banner": {
                "text": " Now for the bottom of the lightboard, open the Variables tray"
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the block onto your code space"
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_number"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_number",
                        "id": "block_22"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_19",
                        "rawId": "t,65ucaurIWrJ]5{!p!9"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_19",
                            "rawId": "t,65ucaurIWrJ]5{!p!9",
                            "inputName": "HIGH"
                        },
                        "target": "block_22"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_19",
                        "rawId": "t,65ucaurIWrJ]5{!p!9"
                    }
                },
                "target": "HIGH"
            }
        },
        {
            "banner": {
                "text": "Change to <kano-value-preview><span>8</span></kano-value-preview> because the lightboard is 8 pixels tall"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_22"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_22"
                        },
                        "value": "8"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Now tilt your lightboard around and see how the brush no longer wanders off the screen",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        }
    ],
    "parts": [
        "gyro-accelerometer"
    ],
    "modules": [
        "variables",
        "control",
        "math"
    ],
    "variables": [
        "brushX",
        "brushY"
    ],
    "filterBlocks": {
        "variables": [
            "variables_set",
            "math_number",
            "variables_get"
        ],
        "control": [
            "every_x_seconds"
        ],
        "lightboard": [
            "turn_on",
            "light_x_y"
        ],
        "math": [
            "unary",
            "math_constrain"
        ],
        "tilt1": [
            "accelerometer_value"
        ]
    },
    "mode": "lightboard",
    "defaultApp": "{\"parts\":[{\"id\":\"tilt1\",\"name\":\"Tilt 1\",\"type\":\"gyro-accelerometer\",\"tagName\":\"kano-part-gyro-accelerometer\",\"userStyle\":{},\"userProperties\":{},\"nonvolatileProperties\":[],\"position\":{\"x\":233,\"y\":161},\"partType\":\"hardware\"}],\"code\":{\"snapshot\":{\"javascript\":\"var brushY, brushX;\\n\\n\\nglobal.when('start', function () {\\n  brushX = 8;\\n  brushY = 4;\\n  time.every(1, 'frames', function () {\\n    devices.get('lightboard').turnOn({\\n                                type: 'single',\\n                                x: brushX-1,\\n                                y: brushY-1\\n                            }, \\\"#ffffff\\\");\\n    brushX += devices.get('tilt1').getAccelerometerData('x');\\n    brushY -= devices.get('tilt1').getAccelerometerData('y');\\n  });\\n});\\n\",\"pseudo\":\"global.when('start', function () {\\n  brushX = 8;\\n  brushY = 4;\\n  time.every(1, 'frames', function () {\\n    devices.get('lightboard').turnOn({\\n                                type: 'single',\\n                                x: brushX-1,\\n                                y: brushY-1\\n                            }, \\\"#ffffff\\\");\\n    brushX += devices.get('tilt1').getAccelerometerData('x');\\n    brushY -= devices.get('tilt1').getAccelerometerData('y');\\n  });\\n});\\n\",\"blocks\":\"<xml xmlns=\\\"http:\/\/www.w3.org\/1999\/xhtml\\\"><block type=\\\"part_event\\\" id=\\\"default_part_event_id\\\" x=\\\"204\\\" y=\\\"43\\\"><field name=\\\"EVENT\\\">global.start<\/field><statement name=\\\"DO\\\"><block type=\\\"variables_set\\\" id=\\\"e}kqI=e|:{FAw%8qpY,6\\\"><field name=\\\"VAR\\\">brushX<\/field><value name=\\\"VALUE\\\"><block type=\\\"math_number\\\" id=\\\"kqL2HeYMt^#Uh7c;2A[_\\\"><field name=\\\"NUM\\\">8<\/field><\/block><\/value><next><block type=\\\"variables_set\\\" id=\\\"^Y,$;l9N7DFXmIc;=rL{\\\"><field name=\\\"VAR\\\">brushY<\/field><value name=\\\"VALUE\\\"><block type=\\\"math_number\\\" id=\\\"H|8Gc#5zq?%:W?0p`^zj\\\"><field name=\\\"NUM\\\">4<\/field><\/block><\/value><next><block type=\\\"every_x_seconds\\\" id=\\\"N\/M#5@id7*_WX|kK2g:I\\\"><field name=\\\"UNIT\\\">frames<\/field><value name=\\\"INTERVAL\\\"><shadow type=\\\"math_number\\\" id=\\\"%gWyz:44tBcGf-B1).o|\\\"><field name=\\\"NUM\\\">1<\/field><\/shadow><\/value><statement name=\\\"DO\\\"><block type=\\\"lightboard#turn_on\\\" id=\\\"Xz[!4#Z}M:hRC3cFS?=F\\\"><value name=\\\"TARGET\\\"><block type=\\\"lightboard#light_x_y\\\" id=\\\"BBj(dGEm69Hpv}%NWmu\/\\\"><value name=\\\"X\\\"><shadow type=\\\"math_number\\\" id=\\\"JyOY$y_0Ki]R;.z?,^-7\\\"><field name=\\\"NUM\\\">1<\/field><\/shadow><block type=\\\"variables_get\\\" id=\\\"Ei+DGHlR|IU920;q3UXL\\\"><field name=\\\"VAR\\\">brushX<\/field><\/block><\/value><value name=\\\"Y\\\"><shadow type=\\\"math_number\\\" id=\\\"#WpVcSK0vo_Y5C{7,yMx\\\"><field name=\\\"NUM\\\">1<\/field><\/shadow><block type=\\\"variables_get\\\" id=\\\"m^j7JCDe(r-1e0-urRY|\\\"><field name=\\\"VAR\\\">brushY<\/field><\/block><\/value><\/block><\/value><next><block type=\\\"unary\\\" id=\\\"[vA=%fe32#p7*EtzqC0Y\\\"><field name=\\\"LEFT_HAND\\\">brushX<\/field><field name=\\\"OPERATOR\\\">+=<\/field><value name=\\\"RIGHT_HAND\\\"><shadow type=\\\"math_number\\\" id=\\\"[4Q]O#AI\/{iOXsqNs;rn\\\"><field name=\\\"NUM\\\">1<\/field><\/shadow><block type=\\\"tilt1#accelerometer_value\\\" id=\\\"2\/XxFjdpJ|Cf-[fDZ@xv\\\"><field name=\\\"AXIS\\\">x<\/field><\/block><\/value><next><block type=\\\"unary\\\" id=\\\"SG5dVBlad4QI`jt;2a[x\\\"><field name=\\\"LEFT_HAND\\\">brushY<\/field><field name=\\\"OPERATOR\\\">-=<\/field><value name=\\\"RIGHT_HAND\\\"><shadow type=\\\"math_number\\\" id=\\\"[4Q]O#AI\/{iOXsqNs;rn\\\"><field name=\\\"NUM\\\">1<\/field><\/shadow><block type=\\\"tilt1#accelerometer_value\\\" id=\\\"@,{-_7EU#d{[vnRz|+e.\\\"><field name=\\\"AXIS\\\">y<\/field><\/block><\/value><\/block><\/next><\/block><\/next><\/block><\/statement><\/block><\/next><\/block><\/next><\/block><\/statement><\/block><\/xml>\"}},\"background\":{\"name\":\"My app\",\"userStyle\":{\"background\":\"#ffffff\"}},\"mode\":\"lightboard\"}"
}