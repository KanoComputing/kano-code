{
    "steps": [
        {
            "banner": {
                "text": "Time to code some rainbow paint!<br />Start by opening the draw tray."
            },
            "beacon": {
                "target": {
                    "category": "normal"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "normal"
                }
            }
        },
        {
            "banner": {
                "text": "Grab the block to set your background color …"
            },
            "beacon": {
                "target": {
                    "flyout_block": "normal#set_background_color"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "normal#set_background_color",
                        "id": "block_1"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "… and connect it inside you <em>when app starts</em> event."
            },
            "beacon": {
                "target": {
                    "block": {
                        "rawId": "default_part_event_id"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "rawId": "default_part_event_id",
                            "inputName": "DO"
                        },
                        "target": "block_1"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "rawId": "default_part_event_id"
                    }
                },
                "target": "DO"
            }
        },
        {
            "banner": {
                "text": "Click the color block <kano-value-preview><span>#ffffff</span></kano-value-preview> and pick out a color for your background (your rainbow paint will show up best on a dark color)."
            },
            "beacon": {
                "target": {
                    "block": {
                        "shadow": "COLOR",
                        "id": "block_1"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "shadow": "COLOR",
                            "id": "block_1"
                        }
                    }
                }
            }
        },
        {
            "banner": {
                "text": "In this challenge, you’re going to use a <em>variable</em>. You can think of variables as tiny buckets for storing a piece of data while the app is running. Open the tray."
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "This block sets the value of the variable (the data its going to keep for you). Grab it!"
            },
            "beacon": {
                "target": {
                    "flyout_block": "variables_set"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "variables_set",
                        "id": "block_2"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it beneath this block."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_1",
                        "rawId": "fiW8(uf]RTEuA$Q1=Ii/"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_1",
                            "rawId": "fiW8(uf]RTEuA$Q1=Ii/"
                        },
                        "target": "block_2"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_1",
                        "rawId": "fiW8(uf]RTEuA$Q1=Ii/"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Change the drop down from <kano-value-preview><span>item</span></kano-value-preview> to <kano-value-preview><span>colorCount</span></kano-value-preview>."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_2"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_2"
                        },
                        "value": "colorCount"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Open the Variables tray again."
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "Let’s use this simple little number block to set the <em>value</em> of our variable.<br>Drag it onto your code space …"
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_number"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_number",
                        "id": "block_3"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "… and connect it to the <em>set colorCount to</em> block."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_2",
                        "rawId": "o8G_5q@3[f;swX?FRv-G"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_2",
                            "rawId": "o8G_5q@3[f;swX?FRv-G",
                            "inputName": "VALUE"
                        },
                        "target": "block_3"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_2",
                        "rawId": "o8G_5q@3[f;swX?FRv-G"
                    }
                },
                "target": "VALUE"
            }
        },
        {
            "banner": {
                "text": "The line of code you just created is really important! It creates a variable called \"colorCount\" and puts one little piece of data inside it: the number 0.",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "Now to add a code loop. Open the control tray."
            },
            "beacon": {
                "target": {
                    "category": "control"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "control"
                }
            }
        },
        {
            "banner": {
                "text": "Drag <em>Every 1 second</em> block into your code space …"
            },
            "beacon": {
                "target": {
                    "flyout_block": "every_x_seconds"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "every_x_seconds",
                        "id": "block_4"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "… and connect it under your variable code."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_2",
                        "rawId": "o8G_5q@3[f;swX?FRv-G"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_2",
                            "rawId": "o8G_5q@3[f;swX?FRv-G"
                        },
                        "target": "block_4"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_2",
                        "rawId": "o8G_5q@3[f;swX?FRv-G"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Change the loop to run every <kano-value-preview><span>frame</span></kano-value-preview>."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_4"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_4"
                        },
                        "value": "frames"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "In the loop, you’re going to change the value of your variable every time the code runs (<em>every 1 frame</em>). Open the Math tray."
            },
            "beacon": {
                "target": {
                    "category": "math"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "math"
                }
            }
        },
        {
            "banner": {
                "text": "This block changes the value of your variable. Grab it …"
            },
            "beacon": {
                "target": {
                    "flyout_block": "unary"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "unary",
                        "id": "block_5"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "… and connect it inside your code loop."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_4",
                        "rawId": "Wq4]H/T]?Q4V+Y_5}0IK"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_4",
                            "rawId": "Wq4]H/T]?Q4V+Y_5}0IK",
                            "inputName": "DO"
                        },
                        "target": "block_5"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_4",
                        "rawId": "Wq4]H/T]?Q4V+Y_5}0IK"
                    }
                },
                "target": "DO"
            }
        },
        {
            "banner": {
                "text": "Change <kano-value-preview><span>item</span></kano-value-preview> to <kano-value-preview><span>colorCount</span></kano-value-preview> so you the right variable is being updated."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_5"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_5"
                        },
                        "value": "colorCount"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Now the value stored in your <em>colorCount</em> variable is increased by one <em>every frame</em>.",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "Open the draw tray …"
            },
            "beacon": {
                "target": {
                    "category": "normal"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "normal"
                }
            }
        },
        {
            "banner": {
                "text": "… and grab the <em>fill color</em> block."
            },
            "beacon": {
                "target": {
                    "flyout_block": "normal#color"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "normal#color",
                        "id": "block_6"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it inside the loop."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_5",
                        "rawId": "2c%.?9C|QVeUVWCC_MG1"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_5",
                            "rawId": "2c%.?9C|QVeUVWCC_MG1"
                        },
                        "target": "block_6"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_5",
                        "rawId": "2c%.?9C|QVeUVWCC_MG1"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Now to set the color. Open the Color tray."
            },
            "beacon": {
                "target": {
                    "category": "color"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "color"
                }
            }
        },
        {
            "banner": {
                "text": "Grab the block to create your own colors."
            },
            "beacon": {
                "target": {
                    "flyout_block": "create_color"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "create_color",
                        "id": "block_7"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to the <em>fill color</em> block."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_6",
                        "rawId": "0?B-j.DFM[2U#r=OvYS4"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_6",
                            "rawId": "0?B-j.DFM[2U#r=OvYS4",
                            "inputName": "COLOR"
                        },
                        "target": "block_7"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_6",
                        "rawId": "0?B-j.DFM[2U#r=OvYS4"
                    }
                },
                "target": "COLOR"
            }
        },
        {
            "banner": {
                "text": "Currently, this block is set to RGB (Red, Green, Blue). To make a rainbow brush, set it to <kano-value-preview><span>HSV</span></kano-value-preview> (Hue, Saturation, Value)."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_7"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_7"
                        },
                        "value": "hsv"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Open the Variables tray."
            },
            "beacon": {
                "target": {
                    "category": "variables"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "variables"
                }
            }
        },
        {
            "banner": {
                "text": "This block <em>returns</em> the value of your variable. It’s a way of getting back the value you stored in the variable."
            },
            "beacon": {
                "target": {
                    "flyout_block": "variables_get"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "variables_get",
                        "id": "block_8"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to this block"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_7",
                        "rawId": "bf(:ez!H1BV,;)Kc_U^,"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_7",
                            "rawId": "bf(:ez!H1BV,;)Kc_U^,",
                            "inputName": "1"
                        },
                        "target": "block_8"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_7",
                        "rawId": "bf(:ez!H1BV,;)Kc_U^,"
                    }
                },
                "target": "1"
            }
        },
        {
            "banner": {
                "text": "Change <kano-value-preview><span>item</span></kano-value-preview> to <kano-value-preview><span>colorCount</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_8"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "id": "block_8"
                        },
                        "value": "colorCount"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Read through your code. What do you think is happening?",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "Yup. Every frame, the value stored in <em>colorCount</em> goes up by one. Then we set the drawing hue using that value. Now let’s draw with that color.",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "Open the draw tray."
            },
            "beacon": {
                "target": {
                    "category": "normal"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "normal"
                }
            }
        },
        {
            "banner": {
                "text": "Grab the <em>move to</em> block …"
            },
            "beacon": {
                "target": {
                    "flyout_block": "normal#move_to"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "normal#move_to",
                        "id": "block_9"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "… and connect it under the color block."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_6",
                        "rawId": "0?B-j.DFM[2U#r=OvYS4"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_6",
                            "rawId": "0?B-j.DFM[2U#r=OvYS4"
                        },
                        "target": "block_9"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_6",
                        "rawId": "0?B-j.DFM[2U#r=OvYS4"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Time to add the mouse part again.<br>Open the parts menu by clicking 'Add Part'."
            },
            "beacon": {
                "target": "add-part-button"
            },
            "validation": {
                "open-parts": true
            }
        },
        {
            "tooltips": [
                {
                    "location": "parts-panel",
                    "position": "top",
                    "text": "Click on <b>Mouse</b> to add it to your app."
                }
            ],
            "beacon": {
                "target": "parts-panel-mouse"
            },
            "validation": {
                "add-part": {
                    "type": "mouse",
                    "id": "part_0"
                }
            }
        },
        {
            "banner": {
                "text": "Open the Mouse tray."
            },
            "beacon": {
                "target": {
                    "category": {
                        "part": "part_0"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": {
                        "part": "part_0"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Grab the <em>Mouse X position</em> block."
            },
            "beacon": {
                "target": {
                    "flyout_block": {
                        "part": "part_0",
                        "type": "mouse_x"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "target": "part_0",
                        "type": "mouse_x",
                        "id": "block_10"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to the <em>move to</em> x input."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_9",
                        "rawId": "kyH2nw,CyuqqVx1bjB8h"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_9",
                            "rawId": "kyH2nw,CyuqqVx1bjB8h",
                            "inputName": "X"
                        },
                        "target": "block_10"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_9",
                        "rawId": "kyH2nw,CyuqqVx1bjB8h"
                    }
                },
                "target": "X"
            }
        },
        {
            "banner": {
                "text": "Now do the same for the mouse Y position."
            },
            "beacon": {
                "target": {
                    "category": {
                        "part": "part_0"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": {
                        "part": "part_0"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Grab the <em>Mouse Y position</em> block …"
            },
            "beacon": {
                "target": {
                    "flyout_block": {
                        "part": "part_0",
                        "type": "mouse_y"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "target": "part_0",
                        "type": "mouse_y",
                        "id": "block_11"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "… and connect it to the <em>move to</em> y input."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_9",
                        "rawId": "kyH2nw,CyuqqVx1bjB8h"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_9",
                            "rawId": "kyH2nw,CyuqqVx1bjB8h",
                            "inputName": "Y"
                        },
                        "target": "block_11"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_9",
                        "rawId": "kyH2nw,CyuqqVx1bjB8h"
                    }
                },
                "target": "Y"
            }
        },
        {
            "banner": {
                "text": "You’ve moved the paint brush. Now to draw something. Open the draw tray."
            },
            "beacon": {
                "target": {
                    "category": "normal"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "normal"
                }
            }
        },
        {
            "banner": {
                "text": "Grab the ellipse block."
            },
            "beacon": {
                "target": {
                    "flyout_block": "normal#ellipse"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "normal#ellipse",
                        "id": "block_12"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it under the move to block."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_9",
                        "rawId": "kyH2nw,CyuqqVx1bjB8h"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_9",
                            "rawId": "kyH2nw,CyuqqVx1bjB8h"
                        },
                        "target": "block_12"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_9",
                        "rawId": "kyH2nw,CyuqqVx1bjB8h"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Change the ellipse height from <kano-value-preview><span>5</span></kano-value-preview> to <kano-value-preview><span>25</span></kano-value-preview>."
            },
            "beacon": {
                "target": {
                    "block": {
                        "shadow": "RADIUSY",
                        "id": "block_12"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "shadow": "RADIUSY",
                            "id": "block_12"
                        },
                        "value": "25"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Try it out by moving your mouse over the canvas. Do you see the colors cycle to make rainbow paint?",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "Cool! Just one more thing to try here. Let’s make the shape of the ellipse way more random.",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "Open the Math tray."
            },
            "beacon": {
                "target": {
                    "category": "math"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "math"
                }
            }
        },
        {
            "banner": {
                "text": "Grab the random number block."
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_random"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_random",
                        "id": "block_13"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to the <em>ellipse</em> width input."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_12",
                        "rawId": "B6S5H#*hu1[ih!U#p/Uj"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_12",
                            "rawId": "B6S5H#*hu1[ih!U#p/Uj",
                            "inputName": "RADIUSX"
                        },
                        "target": "block_13"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_12",
                        "rawId": "B6S5H#*hu1[ih!U#p/Uj"
                    }
                },
                "target": "RADIUSX"
            }
        },
        {
            "banner": {
                "text": "Change <kano-value-preview><span>0</span></kano-value-preview> to <kano-value-preview><span>1</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "shadow": "MIN",
                        "id": "block_13"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "shadow": "MIN",
                            "id": "block_13"
                        },
                        "value": "1"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Change <kano-value-preview><span>10</span></kano-value-preview> to <kano-value-preview><span>30</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "shadow": "MAX",
                        "id": "block_13"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "shadow": "MAX",
                            "id": "block_13"
                        },
                        "value": "30"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "One more time. Open the Math tray again."
            },
            "beacon": {
                "target": {
                    "category": "math"
                }
            },
            "validation": {
                "blockly": {
                    "open-flyout": "math"
                }
            }
        },
        {
            "banner": {
                "text": "Drag the <em>random number</em> block onto your code space."
            },
            "beacon": {
                "target": {
                    "flyout_block": "math_random"
                }
            },
            "validation": {
                "blockly": {
                    "create": {
                        "type": "math_random",
                        "id": "block_14"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Connect it to the <em>ellipse</em> height input."
            },
            "beacon": {
                "target": {
                    "block": {
                        "id": "block_12",
                        "rawId": "B6S5H#*hu1[ih!U#p/Uj"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "connect": {
                        "parent": {
                            "id": "block_12",
                            "rawId": "B6S5H#*hu1[ih!U#p/Uj",
                            "inputName": "RADIUSY"
                        },
                        "target": "block_14"
                    }
                }
            },
            "phantom_block": {
                "location": {
                    "block": {
                        "id": "block_12",
                        "rawId": "B6S5H#*hu1[ih!U#p/Uj"
                    }
                },
                "target": "RADIUSY"
            }
        },
        {
            "banner": {
                "text": "Change <kano-value-preview><span>0</span></kano-value-preview> to <kano-value-preview><span>1</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "shadow": "MIN",
                        "id": "block_14"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "shadow": "MIN",
                            "id": "block_14"
                        },
                        "value": "1"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Change <kano-value-preview><span>10</span></kano-value-preview> to <kano-value-preview><span>30</span></kano-value-preview>"
            },
            "beacon": {
                "target": {
                    "block": {
                        "shadow": "MAX",
                        "id": "block_14"
                    }
                }
            },
            "validation": {
                "blockly": {
                    "value": {
                        "target": {
                            "shadow": "MAX",
                            "id": "block_14"
                        },
                        "value": "30"
                    }
                }
            }
        },
        {
            "banner": {
                "text": "Try it out by drawing on the cavas with your mouse.",
                "next_button": true
            },
            "beacon": {
                "target": "banner-button",
                "offset": 0
            }
        },
        {
            "banner": {
                "text": "What happens when you change the random number range for your ellipse width and height?",
                "next_button": true
            }
        }
    ],
    "parts": [
        "mouse"
    ],
    "modules": [
        "events",
        "variables",
        "control",
        "math",
        "color"
    ],
    "variables": [
        "colorCount"
    ],
    "filterBlocks": {
        "events": [
            "part_event"
        ],
        "normal": [
            "set_background_color",
            "color",
            "move_to",
            "ellipse"
        ],
        "variables": [
            "variables_set",
            "math_number",
            "variables_get"
        ],
        "control": [
            "every_x_seconds"
        ],
        "math": [
            "unary",
            "math_random"
        ],
        "color": [
            "create_color"
        ],
        "mouse": [
            "mouse_x",
            "mouse_y"
        ]
    },
    "mode": "normal"
}
